# 
# Synthesis run script generated by Vivado
# 

namespace eval rt {
    variable rc
}
set rt::rc [catch {
  uplevel #0 {
    set ::env(BUILTIN_SYNTH) true
    source $::env(HRT_TCL_PATH)/rtSynthPrep.tcl
    rt::HARTNDb_resetJobStats
    rt::HARTNDb_resetSystemStats
    rt::HARTNDb_startSystemStats
    rt::HARTNDb_startJobStats
    set rt::cmdEcho 0
    rt::set_parameter writeXmsg true
    rt::set_parameter enableParallelHelperSpawn true
    set ::env(RT_TMP) "D:/MyProject/SDHCAL_DAQ/SDHCAL_DIF1V0/SDHCAL_DIF1V0.runs/synth_1/.Xil/Vivado-12444-WYU/realtime/tmp"
    if { [ info exists ::env(RT_TMP) ] } {
      file delete -force $::env(RT_TMP)
      file mkdir $::env(RT_TMP)
    }

    rt::delete_design

    set rt::partid xc7a100tfgg484-2L
    source $::env(HRT_TCL_PATH)/rtSynthParallelPrep.tcl

    set rt::multiChipSynthesisFlow false
    source $::env(SYNTH_COMMON)/common_vhdl.tcl
    set rt::defaultWorkLibName xil_defaultlib

    set rt::useElabCache false
    if {$rt::useElabCache == false} {
      rt::read_verilog -sv {
      D:/Xilinx/2018.1/Vivado/2018.1/data/ip/xpm/xpm_cdc/hdl/xpm_cdc.sv
      D:/Xilinx/2018.1/Vivado/2018.1/data/ip/xpm/xpm_memory/hdl/xpm_memory.sv
    }
      rt::read_verilog {
      D:/MyProject/SDHCAL_DAQ/SDHCAL_DIF1V0/src/AsicRamReadout.v
      D:/MyProject/SDHCAL_DAQ/SDHCAL_DIF1V0/src/AutoDaq.v
      D:/MyProject/SDHCAL_DAQ/SDHCAL_DIF1V0/src/BitShiftOut.v
      D:/MyProject/SDHCAL_DAQ/SDHCAL_DIF1V0/src/CommandDecoder.v
      D:/MyProject/SDHCAL_DAQ/SDHCAL_DIF1V0/src/CommandInterpreter.v
      D:/MyProject/SDHCAL_DAQ/SDHCAL_DIF1V0/src/ConfigurationParameterDistribution.v
      D:/MyProject/SDHCAL_DAQ/SDHCAL_DIF1V0/src/DaqControl.v
      D:/MyProject/SDHCAL_DAQ/SDHCAL_DIF1V0/src/DaqSwitcher.v
      D:/MyProject/SDHCAL_DAQ/SDHCAL_DIF1V0/src/ExternalRazGenerate.v
      D:/MyProject/SDHCAL_DAQ/SDHCAL_DIF1V0/src/HoldGenerate.v
      D:/MyProject/SDHCAL_DAQ/SDHCAL_DIF1V0/src/MicrorocControl.v
      D:/MyProject/SDHCAL_DAQ/SDHCAL_DIF1V0/src/ParameterGenerator.v
      D:/MyProject/SDHCAL_DAQ/SDHCAL_DIF1V0/src/PowerOnControl.v
      D:/MyProject/SDHCAL_DAQ/SDHCAL_DIF1V0/src/PulseSynchronous.v
      D:/MyProject/SDHCAL_DAQ/SDHCAL_DIF1V0/src/Redundancy.v
      D:/MyProject/SDHCAL_DAQ/SDHCAL_DIF1V0/src/SlaveDaq.v
      D:/MyProject/SDHCAL_DAQ/SDHCAL_DIF1V0/src/SlowControlAndReadScopeSet.v
      D:/MyProject/SDHCAL_DAQ/SDHCAL_DIF1V0/src/TimeStampSyncAndDataTrigger.v
      D:/MyProject/SDHCAL_DAQ/SDHCAL_DIF1V0/src/usb_synchronous_slavefifo.v
      D:/MyProject/SDHCAL_DAQ/SDHCAL_DIF1V0/src/FPGA_Top.v
      D:/MyProject/SDHCAL_DAQ/SDHCAL_DIF1V0/src/SCurve_Test_Control.v
      D:/MyProject/SDHCAL_DAQ/SDHCAL_DIF1V0/src/SCurve_Test_Top.v
      D:/MyProject/SDHCAL_DAQ/SDHCAL_DIF1V0/src/SCurve_Single_Test.v
      D:/MyProject/SDHCAL_DAQ/SDHCAL_DIF1V0/src/SCurve_Single_Input.v
      D:/MyProject/SDHCAL_DAQ/SDHCAL_DIF1V0/src/ADC_AD9220.v
      D:/MyProject/SDHCAL_DAQ/SDHCAL_DIF1V0/src/AdcControl.v
      D:/MyProject/SDHCAL_DAQ/SDHCAL_DIF1V0/src/AcquisitionControl.v
      D:/MyProject/SDHCAL_DAQ/SDHCAL_DIF1V0/src/AcquisitionSwitcher.v
      D:/MyProject/SDHCAL_DAQ/SDHCAL_DIF1V0/src/TriggerSwitcher.v
      D:/MyProject/SDHCAL_DAQ/SDHCAL_DIF1V0/src/ClockManagement.v
      D:/MyProject/SDHCAL_DAQ/SDHCAL_DIF1V0/src/MicrorocDataSwitcher.v
      D:/MyProject/SDHCAL_DAQ/SDHCAL_DIF1V0/src/MicrorocCommonControl.v
      D:/MyProject/SDHCAL_DAQ/SDHCAL_DIF1V0/src/RamReadDoneSync4Chain.v
    }
      rt::read_vhdl -lib blk_mem_gen_v8_4_1 d:/MyProject/SDHCAL_DAQ/SDHCAL_DIF1V0/SDHCAL_DIF1V0.srcs/sources_1/ip/CommandFifo/hdl/blk_mem_gen_v8_4_vhsyn_rfs.vhd
      rt::read_vhdl -lib fifo_generator_v13_2_2 d:/MyProject/SDHCAL_DAQ/SDHCAL_DIF1V0/SDHCAL_DIF1V0.srcs/sources_1/ip/CommandFifo/hdl/fifo_generator_v13_2_vhsyn_rfs.vhd
      rt::read_vhdl -lib xil_defaultlib {
      d:/MyProject/SDHCAL_DAQ/SDHCAL_DIF1V0/SDHCAL_DIF1V0.srcs/sources_1/ip/CommandFifo/synth/CommandFifo.vhd
      d:/MyProject/SDHCAL_DAQ/SDHCAL_DIF1V0/SDHCAL_DIF1V0.srcs/sources_1/ip/ConfigParameterFIFO/synth/ConfigParameterFIFO.vhd
      d:/MyProject/SDHCAL_DAQ/SDHCAL_DIF1V0/SDHCAL_DIF1V0.srcs/sources_1/ip/SCurveDataFifo/synth/SCurveDataFifo.vhd
      d:/MyProject/SDHCAL_DAQ/SDHCAL_DIF1V0/SDHCAL_DIF1V0.srcs/sources_1/ip/MicrorocChainDataFifo/synth/MicrorocChainDataFifo.vhd
      d:/MyProject/SDHCAL_DAQ/SDHCAL_DIF1V0/SDHCAL_DIF1V0.srcs/sources_1/ip/ExternalDataFifo/synth/ExternalDataFifo.vhd
    }
      rt::read_vhdl -lib xpm D:/Xilinx/2018.1/Vivado/2018.1/data/ip/xpm/xpm_VCOMP.vhd
      rt::filesetChecksum
    }
    rt::set_parameter usePostFindUniquification false
    set rt::top FPGA_Top
    rt::set_parameter enableIncremental true
    set rt::reportTiming false
    rt::set_parameter elaborateOnly true
    rt::set_parameter elaborateRtl true
    rt::set_parameter eliminateRedundantBitOperator false
    rt::set_parameter writeBlackboxInterface true
    rt::set_parameter merge_flipflops true
    rt::set_parameter srlDepthThreshold 3
    rt::set_parameter rstSrlDepthThreshold 4
# MODE: 
    rt::set_parameter webTalkPath {}
    rt::set_parameter enableSplitFlowPath "D:/MyProject/SDHCAL_DAQ/SDHCAL_DIF1V0/SDHCAL_DIF1V0.runs/synth_1/.Xil/Vivado-12444-WYU/"
    set ok_to_delete_rt_tmp true 
    if { [rt::get_parameter parallelDebug] } { 
       set ok_to_delete_rt_tmp false 
    } 
    if {$rt::useElabCache == false} {
        set oldMIITMVal [rt::get_parameter maxInputIncreaseToMerge]; rt::set_parameter maxInputIncreaseToMerge 1000
        set oldCDPCRL [rt::get_parameter createDfgPartConstrRecurLimit]; rt::set_parameter createDfgPartConstrRecurLimit 1
        $rt::db readXRFFile
      rt::run_rtlelab -module $rt::top
        rt::set_parameter maxInputIncreaseToMerge $oldMIITMVal
        rt::set_parameter createDfgPartConstrRecurLimit $oldCDPCRL
    }

    set rt::flowresult [ source $::env(SYNTH_COMMON)/flow.tcl ]
    rt::HARTNDb_stopJobStats
    if { $rt::flowresult == 1 } { return -code error }


    if { [ info exists ::env(RT_TMP) ] } {
      if { [info exists ok_to_delete_rt_tmp] && $ok_to_delete_rt_tmp } { 
        file delete -force $::env(RT_TMP)
      }
    }

    source $::env(HRT_TCL_PATH)/rtSynthCleanup.tcl
  } ; #end uplevel
} rt::result]

if { $rt::rc } {
  $rt::db resetHdlParse
  set hsKey [rt::get_parameter helper_shm_key] 
  if { $hsKey != "" && [info exists ::env(BUILTIN_SYNTH)] && [rt::get_parameter enableParallelHelperSpawn] } { 
     $rt::db killSynthHelper $hsKey
  } 
  source $::env(HRT_TCL_PATH)/rtSynthCleanup.tcl
  return -code "error" $rt::result
}
